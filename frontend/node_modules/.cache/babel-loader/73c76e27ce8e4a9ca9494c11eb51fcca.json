{"ast":null,"code":"/**\n * Copyright (c) 2010 Chris O'Hara <cohara87@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n//Note: cli includes kof/node-natives and creationix/stack. I couldn't find\n//license information for either - contact me if you want your license added\nvar cli = exports,\n    argv,\n    curr_opt,\n    curr_val,\n    full_opt,\n    is_long,\n    short_tags = [],\n    opt_list,\n    parsed = {},\n    usage,\n    argv_parsed,\n    command_list,\n    commands,\n    show_debug;\ncli.app = null;\ncli.version = null;\ncli.argv = [];\ncli.argc = 0;\ncli.options = {};\ncli.args = [];\ncli.command = null;\ncli.width = 70;\ncli.option_width = 25;\n/**\n * Bind kof's node-natives (https://github.com/kof/node-natives) to `cli.native`\n *\n * Rather than requiring node natives (e.g. var fs = require('fs')), all\n * native modules can be accessed like `cli.native.fs`\n */\n\ncli.native = {};\n\nvar define_native = function (module) {\n  Object.defineProperty(cli.native, module, {\n    enumerable: true,\n    configurable: true,\n    get: function () {\n      delete cli.native[module];\n      return cli.native[module] = require(module);\n    }\n  });\n};\n\nvar natives = process.binding('natives');\n\nfor (var module in natives) {\n  define_native(module);\n}\n\ncli.output = console.log;\ncli.exit = require('exit');\ncli.no_color = false;\n\nif (process.env.NODE_DISABLE_COLORS || process.env.TERM === 'dumb') {\n  cli.no_color = true;\n}\n/**\n * Define plugins. Plugins can be enabled and disabled by calling:\n *\n *     `cli.enable(plugin1, [plugin2, ...])`\n *     `cli.disable(plugin1, [plugin2, ...])`\n *\n * Methods are chainable - `cli.enable(plugin).disable(plugin2)`.\n *\n * The 'help' plugin is enabled by default.\n */\n\n\nvar enable = {\n  help: true,\n  //Adds -h, --help\n  version: false,\n  //Adds -v,--version => gets version by parsing a nearby package.json\n  status: false,\n  //Adds -k,--no-color & --debug => display plain status messages /display debug messages\n  timeout: false,\n  //Adds -t,--timeout N => timeout the process after N seconds\n  catchall: false,\n  //Adds -c,--catch => catch and output uncaughtExceptions\n  glob: false //Adds glob matching => use cli.glob(arg)\n\n};\n\ncli.enable = function\n  /*plugins*/\n() {\n  Array.prototype.slice.call(arguments).forEach(function (plugin) {\n    switch (plugin) {\n      case 'catchall':\n        process.on('uncaughtException', function (err) {\n          cli.error('Uncaught exception: ' + (err.msg || err));\n        });\n        break;\n\n      case 'help':\n      case 'version':\n      case 'status':\n      case 'autocomplete':\n      case 'timeout':\n        //Just add switches.\n        break;\n\n      case 'glob':\n        cli.glob = require('glob');\n        break;\n\n      default:\n        cli.fatal('Unknown plugin \"' + plugin + '\"');\n        break;\n    }\n\n    enable[plugin] = true;\n  });\n  return cli;\n};\n\ncli.disable = function\n  /*plugins*/\n() {\n  Array.prototype.slice.call(arguments).forEach(function (plugin) {\n    if (enable[plugin]) {\n      enable[plugin] = false;\n    }\n  });\n  return cli;\n};\n/**\n * Sets argv (default is process.argv).\n *\n * @param {Array|String} argv\n * @param {Boolean} keep_arg0 (optional - default is false)\n * @api public\n */\n\n\ncli.setArgv = function (arr, keep_arg0) {\n  if (typeof arr == 'string') {\n    arr = arr.split(' ');\n  } else {\n    arr = arr.slice();\n  }\n\n  cli.app = arr.shift(); // Strip off argv[0] if it's a node binary\n  // So this is still broken and will break if you are calling node through a\n  // symlink, unless you are lucky enough to have it as 'node' literal. Latter\n  // is a hack, but resolving abspaths/symlinks is an unportable can of worms.\n\n  if (!keep_arg0 && (['node', 'node.exe'].indexOf(cli.native.path.basename(cli.app)) !== -1 || cli.native.path.basename(process.execPath) === cli.app || process.execPath === cli.app)) {\n    cli.app = arr.shift();\n  }\n\n  cli.app = cli.native.path.basename(cli.app);\n  argv_parsed = false;\n  cli.args = cli.argv = argv = arr;\n  cli.argc = argv.length;\n  cli.options = {};\n  cli.command = null;\n};\n\ncli.setArgv(process.argv);\n/**\n * Returns the next opt, or false if no opts are found.\n *\n * @return {String} opt\n * @api public\n */\n\ncli.next = function () {\n  if (!argv_parsed) {\n    cli.args = [];\n    argv_parsed = true;\n  }\n\n  curr_val = null; //If we're currently in a group of short opts (e.g. -abc), return the next opt\n\n  if (short_tags.length) {\n    curr_opt = short_tags.shift();\n    full_opt = '-' + curr_opt;\n    return curr_opt;\n  }\n\n  if (!argv.length) {\n    return false;\n  }\n\n  curr_opt = argv.shift(); //If an escape sequence is found (- or --), subsequent opts are ignored\n\n  if (curr_opt === '-' || curr_opt === '--') {\n    while (argv.length) {\n      cli.args.push(argv.shift());\n    }\n\n    return false;\n  } //If the next element in argv isn't an opt, add it to the list of args\n\n\n  if (curr_opt[0] !== '-') {\n    cli.args.push(curr_opt);\n    return cli.next();\n  } else {\n    //Check if the opt is short/long\n    is_long = curr_opt[1] === '-';\n    curr_opt = curr_opt.substr(is_long ? 2 : 1);\n  } //Accept grouped short opts, e.g. -abc => -a -b -c\n\n\n  if (!is_long && curr_opt.length > 1) {\n    short_tags = curr_opt.split('');\n    return cli.next();\n  }\n\n  var eq, len; //Check if the long opt is in the form --option=VALUE\n\n  if (is_long && (eq = curr_opt.indexOf('=')) >= 0) {\n    curr_val = curr_opt.substr(eq + 1);\n    curr_opt = curr_opt.substr(0, eq);\n    len = curr_val.length; //Allow values to be quoted\n\n    if (curr_val[0] === '\"' && curr_val[len - 1] === '\"' || curr_val[0] === \"'\" && curr_val[len - 1] === \"'\") {\n      curr_val = curr_val.substr(1, len - 2);\n    }\n\n    if (curr_val.match(/^[0-9]+$/)) {\n      curr_val = parseInt(curr_val, 10);\n    }\n  } //Save the opt representation for later\n\n\n  full_opt = (is_long ? '--' : '-') + curr_opt;\n  return curr_opt;\n};\n/**\n * Parses command line opts.\n *\n * `opts` must be an object with opts defined like:\n *        long_tag: [short_tag, description, value_type, default_value];\n *\n * `commands` is an optional array or object for apps that are of the form\n *      my_app [OPTIONS] <command> [ARGS]\n *  The command list is output with usage information + there is bundled\n *  support for auto-completion, etc.\n *\n * See README.md for more information.\n *\n * @param {Object} opts\n * @param {Object} commands (optional)\n * @return {Object} opts (parsed)\n * @api public\n */\n\n\ncli.parse = function (opts, command_def) {\n  var default_val,\n      i,\n      o,\n      parsed = cli.options,\n      seen,\n      catch_all = !opts;\n  opt_list = opts || {};\n  commands = command_def;\n  command_list = commands || [];\n\n  if (commands && !Array.isArray(commands)) {\n    command_list = Object.keys(commands);\n  }\n\n  while (o = cli.next()) {\n    seen = false;\n\n    for (var opt in opt_list) {\n      if (!(opt_list[opt] instanceof Array)) {\n        continue;\n      }\n\n      if (!opt_list[opt][0]) {\n        opt_list[opt][0] = opt;\n      }\n\n      if (o === opt || o === opt_list[opt][0]) {\n        seen = true;\n\n        if (opt_list[opt].length === 2) {\n          parsed[opt] = true;\n          break;\n        }\n\n        default_val = null;\n\n        if (opt_list[opt].length === 4) {\n          default_val = opt_list[opt][3];\n        }\n\n        if (opt_list[opt][2] instanceof Array) {\n          for (i = 0, l = opt_list[opt][2].length; i < l; i++) {\n            if (typeof opt_list[opt][2][i] === 'number') {\n              opt_list[opt][2][i] += '';\n            }\n          }\n\n          parsed[opt] = cli.getArrayValue(opt_list[opt][2], is_long ? null : default_val);\n          break;\n        }\n\n        if (opt_list[opt][2].toLowerCase) {\n          opt_list[opt][2] = opt_list[opt][2].toLowerCase();\n        }\n\n        switch (opt_list[opt][2]) {\n          case 'string':\n          case 1:\n          case true:\n            parsed[opt] = cli.getValue(default_val);\n            break;\n\n          case 'int':\n          case 'number':\n          case 'num':\n          case 'time':\n          case 'seconds':\n          case 'secs':\n          case 'minutes':\n          case 'mins':\n          case 'x':\n          case 'n':\n            parsed[opt] = cli.getInt(default_val);\n            break;\n\n          case 'date':\n          case 'datetime':\n          case 'date_time':\n            parsed[opt] = cli.getDate(default_val);\n            break;\n\n          case 'float':\n          case 'decimal':\n            parsed[opt] = cli.getFloat(default_val);\n            break;\n\n          case 'path':\n          case 'file':\n          case 'directory':\n          case 'dir':\n            parsed[opt] = cli.getPath(default_val, opt_list[opt][2]);\n            break;\n\n          case 'email':\n            parsed[opt] = cli.getEmail(default_val);\n            break;\n\n          case 'url':\n          case 'uri':\n          case 'domain':\n          case 'host':\n            parsed[opt] = cli.getUrl(default_val, opt_list[opt][2]);\n            break;\n\n          case 'ip':\n            parsed[opt] = cli.getIp(default_val);\n            break;\n\n          case 'bool':\n          case 'boolean':\n          case 'on':\n            parsed[opt] = true;\n            break;\n\n          case 'false':\n          case 'off':\n          case false:\n          case 0:\n            parsed[opt] = false;\n            break;\n\n          default:\n            cli.fatal('Unknown opt type \"' + opt_list[opt][2] + '\"');\n        }\n\n        break;\n      }\n    }\n\n    if (!seen) {\n      if (enable.help && (o === 'h' || o === 'help')) {\n        cli.getUsage();\n      } else if (enable.version && (o === 'v' || o === 'version')) {\n        if (cli.version == null) {\n          cli.parsePackageJson();\n        }\n\n        console.error(cli.app + ' v' + cli.version);\n        cli.exit();\n        break;\n      } else if (enable.catchall && (o === 'c' || o === 'catch')) {\n        continue;\n      } else if (enable.status && (o === 'k' || o === 'no-color')) {\n        cli.no_color = o === 'k' || o === 'no-color';\n        continue;\n      } else if (enable.status && o === 'debug') {\n        show_debug = o === 'debug';\n        continue;\n      } else if (enable.timeout && (o === 't' || o === 'timeout')) {\n        var secs = cli.getInt();\n        setTimeout(function () {\n          cli.fatal('Process timed out after ' + secs + 's');\n        }, secs * 1000);\n        continue;\n      } else if (catch_all) {\n        parsed[o] = curr_val || true;\n        continue;\n      }\n\n      cli.fatal('Unknown option ' + full_opt);\n    }\n  } //Fill the remaining options with their default value or null\n\n\n  for (var opt in opt_list) {\n    default_val = opt_list[opt].length === 4 ? opt_list[opt][3] : null;\n\n    if (!(opt_list[opt] instanceof Array)) {\n      parsed[opt] = opt_list[opt];\n      continue;\n    } else if (typeof parsed[opt] === 'undefined') {\n      parsed[opt] = default_val;\n    }\n  }\n\n  if (command_list.length) {\n    if (cli.args.length === 0) {\n      if (enable.help) {\n        cli.getUsage();\n      } else {\n        cli.fatal('A command is required (' + command_list.join(', ') + ').');\n      }\n\n      return cli.exit(1);\n    } else {\n      cli.command = cli.autocompleteCommand(cli.args.shift());\n    }\n  }\n\n  cli.argc = cli.args.length;\n  return parsed;\n};\n/**\n * Helper method for matching a command from the command list.\n *\n * @param {String} command\n * @return {String} full_command\n * @api public\n */\n\n\ncli.autocompleteCommand = function (command) {\n  var list;\n\n  if (!(command_list instanceof Array)) {\n    list = Object.keys(command_list);\n  } else {\n    list = command_list;\n  }\n\n  var i,\n      j = 0,\n      c = command.length,\n      tmp_list;\n\n  if (list.length === 0 || list.indexOf(command) !== -1) {\n    return command;\n  }\n\n  for (i = 0; i < c; i++) {\n    tmp_list = [];\n    l = list.length;\n    if (l <= 1) break;\n\n    for (j = 0; j < l; j++) if (list[j].length >= i && list[j][i] === command[i]) tmp_list.push(list[j]);\n\n    list = tmp_list;\n  }\n\n  l = list.length;\n\n  if (l === 1) {\n    return list[0];\n  } else if (l === 0) {\n    cli.fatal('Unknown command \"' + command + '\"' + (enable.help ? '. Please see --help for more information' : ''));\n  } else {\n    list.sort();\n    cli.fatal('The command \"' + command + '\" is ambiguous and could mean \"' + list.join('\", \"') + '\"');\n  }\n};\n/**\n * Adds methods to output styled status messages to stderr.\n *\n * Added methods are cli.info(msg), cli.error(msg), cli.ok(msg), and\n * cli.debug(msg).\n *\n * To control status messages, use the 'status' plugin\n *    1) debug() messages are hidden by default. Display them with\n *       the --debug opt.\n *    2) to hide all status messages, use the -s or --silent opt.\n *\n * @api private\n */\n\n\ncli.status = function (msg, type) {\n  var pre;\n\n  switch (type) {\n    case 'info':\n      pre = cli.no_color ? 'INFO:' : '\\x1B[33mINFO\\x1B[0m:';\n      break;\n\n    case 'debug':\n      pre = cli.no_color ? 'DEBUG:' : '\\x1B[36mDEBUG\\x1B[0m:';\n      break;\n\n    case 'error':\n    case 'fatal':\n      pre = cli.no_color ? 'ERROR:' : '\\x1B[31mERROR\\x1B[0m:';\n      break;\n\n    case 'ok':\n      pre = cli.no_color ? 'OK:' : '\\x1B[32mOK\\x1B[0m:';\n      break;\n  }\n\n  msg = pre + ' ' + msg;\n\n  if (type === 'fatal') {\n    console.error(msg);\n    return cli.exit(1);\n  }\n\n  if (enable.status && !show_debug && type === 'debug') {\n    return;\n  }\n\n  console.error(msg);\n};\n\n['info', 'error', 'ok', 'debug', 'fatal'].forEach(function (type) {\n  cli[type] = function (msg) {\n    cli.status(msg, type);\n  };\n});\n/**\n * Sets the app name and version.\n *\n * Usage:\n *     setApp('myapp', '0.1.0');\n *     setApp('./package.json'); //Pull name/version from package.json\n *\n * @param {String} name\n * @return cli (for chaining)\n * @api public\n */\n\ncli.setApp = function (name, version) {\n  if (name.indexOf('package.json') !== -1) {\n    cli.parsePackageJson(name);\n  } else {\n    cli.app = name;\n    cli.version = version;\n  }\n\n  return cli;\n};\n/**\n * Parses the version number from package.json. If no path is specified, cli\n * will attempt to locate a package.json in ./, ../ or ../../\n *\n * @param {String} path (optional)\n * @api public\n */\n\n\ncli.parsePackageJson = function (path) {\n  var parse_packagejson = function (path) {\n    var packagejson = JSON.parse(cli.native.fs.readFileSync(path, 'utf8'));\n    cli.version = packagejson.version;\n    cli.app = packagejson.name;\n  };\n\n  var try_all = function (arr, func, err) {\n    for (var i = 0, l = arr.length; i < l; i++) {\n      try {\n        func(arr[i]);\n        return;\n      } catch (e) {\n        if (i === l - 1) {\n          cli.fatal(err);\n        }\n      }\n    }\n  };\n\n  try {\n    if (path) {\n      return parse_packagejson(path);\n    }\n\n    try_all([__dirname + '/package.json', __dirname + '/../package.json', __dirname + '/../../package.json'], parse_packagejson);\n  } catch (e) {\n    cli.fatal('Could not detect ' + cli.app + ' version');\n  }\n};\n/**\n * Sets the usage string - default is `app [OPTIONS] [ARGS]`.\n *\n * @param {String} u\n * @return cli (for chaining)\n * @api public\n */\n\n\ncli.setUsage = function (u) {\n  usage = u;\n  return cli;\n};\n\nvar pad = function (str, len) {\n  if (typeof len === 'undefined') {\n    len = str;\n    str = '';\n  }\n\n  if (str.length < len) {\n    len -= str.length;\n\n    while (len--) str += ' ';\n  }\n\n  return str;\n};\n/**\n * Automatically build usage information from the opts list. If the help\n * plugin is enabled (default), this info is displayed with -h, --help.\n *\n * @api public\n */\n\n\ncli.getUsage = function (code) {\n  var short,\n      desc,\n      optional,\n      line,\n      seen_opts = [],\n      switch_pad = cli.option_width;\n\n  var trunc_desc = function (pref, desc, len) {\n    var pref_len = pref.length,\n        desc_len = cli.width - pref_len,\n        truncated = '';\n\n    if (desc.length <= desc_len) {\n      return desc;\n    }\n\n    var desc_words = (desc + '').split(' '),\n        chars = 0,\n        word;\n\n    while (desc_words.length) {\n      truncated += (word = desc_words.shift()) + ' ';\n      chars += word.length;\n\n      if (desc_words.length && chars + desc_words[0].length > desc_len) {\n        truncated += '\\n' + pad(pref_len);\n        chars = 0;\n      }\n    }\n\n    return truncated;\n  };\n\n  usage = usage || cli.app + ' [OPTIONS]' + (command_list.length ? ' <command>' : '') + ' [ARGS]';\n\n  if (cli.no_color) {\n    console.error('Usage:\\n  ' + usage);\n    console.error('Options: ');\n  } else {\n    console.error('\\x1b[1mUsage\\x1b[0m:\\n  ' + usage);\n    console.error('\\n\\x1b[1mOptions\\x1b[0m: ');\n  }\n\n  for (var opt in opt_list) {\n    if (opt.length === 1) {\n      long = opt_list[opt][0];\n      short = opt;\n    } else {\n      long = opt;\n      short = opt_list[opt][0];\n    } //Parse opt_list\n\n\n    desc = opt_list[opt][1].trim();\n    type = opt_list[opt].length >= 3 ? opt_list[opt][2] : null;\n    optional = opt_list[opt].length === 4 ? opt_list[opt][3] : null; //Build usage line\n\n    if (short === long) {\n      if (short.length === 1) {\n        line = '  -' + short;\n      } else {\n        line = '      --' + long;\n      }\n    } else if (short) {\n      line = '  -' + short + ', --' + long;\n    } else {\n      line = '      --' + long;\n    }\n\n    line += ' ';\n\n    if (type) {\n      if (type instanceof Array) {\n        desc += '. VALUE must be either [' + type.join('|') + ']';\n        type = 'VALUE';\n      }\n\n      if (type === true || type === 1) {\n        type = long.toUpperCase();\n      }\n\n      type = type.toUpperCase();\n\n      if (type === 'FLOAT' || type === 'INT') {\n        type = 'NUMBER';\n      }\n\n      line += optional ? '[' + type + ']' : type;\n    }\n\n    line = pad(line, switch_pad);\n    line += trunc_desc(line, desc);\n    line += optional ? ' (Default is ' + optional + ')' : '';\n    console.error(line.replace('%s', '%\\0s'));\n    seen_opts.push(short);\n    seen_opts.push(long);\n  }\n\n  if (enable.timeout && seen_opts.indexOf('t') === -1 && seen_opts.indexOf('timeout') === -1) {\n    console.error(pad('  -t, --timeout N', switch_pad) + 'Exit if the process takes longer than N seconds');\n  }\n\n  if (enable.status) {\n    if (seen_opts.indexOf('k') === -1 && seen_opts.indexOf('no-color') === -1) {\n      console.error(pad('  -k, --no-color', switch_pad) + 'Omit color from output');\n    }\n\n    if (seen_opts.indexOf('debug') === -1) {\n      console.error(pad('      --debug', switch_pad) + 'Show debug information');\n    }\n  }\n\n  if (enable.catchall && seen_opts.indexOf('c') === -1 && seen_opts.indexOf('catch') === -1) {\n    console.error(pad('  -c, --catch', switch_pad) + 'Catch unanticipated errors');\n  }\n\n  if (enable.version && seen_opts.indexOf('v') === -1 && seen_opts.indexOf('version') === -1) {\n    console.error(pad('  -v, --version', switch_pad) + 'Display the current version');\n  }\n\n  if (enable.help && seen_opts.indexOf('h') === -1 && seen_opts.indexOf('help') === -1) {\n    console.error(pad('  -h, --help', switch_pad) + 'Display help and usage details');\n  }\n\n  if (command_list.length) {\n    console.error('\\n\\x1b[1mCommands\\x1b[0m: ');\n\n    if (!Array.isArray(commands)) {\n      for (var c in commands) {\n        line = '  ' + pad(c, switch_pad - 2);\n        line += trunc_desc(line, commands[c]);\n        console.error(line);\n      }\n    } else {\n      command_list.sort();\n      console.error('  ' + trunc_desc('  ', command_list.join(', ')));\n    }\n  }\n\n  return cli.exit(code);\n};\n/**\n * Generates an error message when an opt is incorrectly used.\n *\n * @param {String} expects (e.g. 'a value')\n * @param {String} type (e.g. 'VALUE')\n * @api public\n */\n\n\ncli.getOptError = function (expects, type) {\n  var err = full_opt + ' expects ' + expects + '. Use `' + cli.app + ' ' + full_opt + (is_long ? '=' : ' ') + type + '`';\n  return err;\n};\n/**\n * Gets the next opt value and validates it with an optional validation\n * function. If validation fails or no value can be obtained, this method\n * will return the default value (if specified) or exit with err_msg.\n *\n * @param {String} default_val\n * @param {Function} validate_func\n * @param {String} err_msg\n * @api public\n */\n\n\ncli.getValue = function (default_val, validate_func, err_msg) {\n  err_msg = err_msg || cli.getOptError('a value', 'VALUE');\n  var value;\n\n  try {\n    if (curr_val) {\n      if (validate_func) {\n        curr_val = validate_func(curr_val);\n      }\n\n      return curr_val;\n    } //Grouped short opts aren't allowed to have values\n\n\n    if (short_tags.length) {\n      throw 'Short tags';\n    } //If there's no args left or the next arg is an opt, return the\n    //default value (if specified) - otherwise fail\n\n\n    if (!argv.length || argv[0].length === 1 && argv[0][0] === '-') {\n      throw 'No value';\n    }\n\n    value = argv.shift();\n\n    if (value.match(/^[0-9]+$/)) {\n      value = parseInt(value, 10);\n    } //Run the value through a validation/transformation function if specified\n\n\n    if (validate_func) {\n      value = validate_func(value);\n    }\n  } catch (e) {\n    //The value didn't pass the validation/transformation. Unshift the value and\n    //return the default value (if specified)\n    if (value) {\n      argv.unshift(value);\n    }\n\n    return default_val != null ? default_val : cli.fatal(err_msg);\n  }\n\n  return value;\n};\n\ncli.getInt = function (default_val) {\n  return cli.getValue(default_val, function (value) {\n    if (typeof value === 'number') return value;\n\n    if (!value.match(/^(?:-?(?:0|[1-9][0-9]*))$/)) {\n      throw 'Invalid int';\n    }\n\n    return parseInt(value);\n  }, cli.getOptError('a number', 'NUMBER'));\n};\n\ncli.getDate = function (default_val) {\n  return cli.getValue(default_val, function (value) {\n    if (cli.toType(value) === 'date') return value;\n    value = new Date(value);\n\n    if (!value.getTime()) {\n      throw value.toString();\n    }\n\n    return value;\n  }, cli.getOptError('a date', 'DATE'));\n};\n\ncli.getFloat = function (default_val) {\n  return cli.getValue(default_val, function (value) {\n    if (!value.match(/^(?:-?(?:0|[1-9][0-9]*))?(?:\\.[0-9]*)?$/)) {\n      throw 'Invalid float';\n    }\n\n    return parseFloat(value, 10);\n  }, cli.getOptError('a number', 'NUMBER'));\n};\n\ncli.getUrl = function (default_val, identifier) {\n  identifier = identifier || 'url';\n  return cli.getValue(default_val, function (value) {\n    if (!value.match(/^(?:(?:ht|f)tp(?:s?)\\:\\/\\/|~\\/|\\/)?(?:\\w+:\\w+@)?((?:(?:[-\\w\\d{1-3}]+\\.)+(?:com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|edu|co\\.uk|ac\\.uk|it|fr|tv|museum|asia|local|travel|[a-z]{2})?)|((\\b25[0-5]\\b|\\b[2][0-4][0-9]\\b|\\b[0-1]?[0-9]?[0-9]\\b)(\\.(\\b25[0-5]\\b|\\b[2][0-4][0-9]\\b|\\b[0-1]?[0-9]?[0-9]\\b)){3}))(?::[\\d]{1,5})?(?:(?:(?:\\/(?:[-\\w~!$+|.,=]|%[a-f\\d]{2})+)+|\\/)+|\\?|#)?(?:(?:\\?(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)(?:&(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)*)*(?:#(?:[-\\w~!$ |\\/.,*:;=]|%[a-f\\d]{2})*)?$/i)) {\n      throw 'Invalid URL';\n    }\n\n    return value;\n  }, cli.getOptError('a ' + identifier, identifier.toUpperCase()));\n};\n\ncli.getEmail = function (default_val) {\n  return cli.getValue(default_val, function (value) {\n    if (!value.match(/^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/)) {\n      throw 'Invalid email';\n    }\n\n    return value;\n  }, cli.getOptError('an email', 'EMAIL'));\n};\n\ncli.getIp = function (default_val) {\n  return cli.getValue(default_val, function (value) {\n    if (!value.match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/)) {\n      throw 'Invalid IP';\n    }\n\n    return value;\n  }, cli.getOptError('an IP', 'IP'));\n};\n\ncli.getPath = function (default_val, identifier) {\n  identifier = identifier || 'path';\n  return cli.getValue(default_val, function (value) {\n    if (value.match(/[?*;{}]/)) {\n      throw 'Invalid path';\n    }\n\n    return value;\n  }, cli.getOptError('a ' + identifier, identifier.toUpperCase()));\n};\n\ncli.getArrayValue = function (arr, default_val) {\n  return cli.getValue(default_val, function (value) {\n    if (arr.indexOf(value) === -1) {\n      throw 'Unexpected value';\n    }\n\n    return value;\n  }, cli.getOptError('either [' + arr.join('|') + ']', 'VALUE'));\n};\n/**\n * Gets all data from STDIN (with optional encoding) and sends it to callback.\n *\n * @param {String} encoding (optional - default is 'utf8')\n * @param {Function} callback\n * @api public\n */\n\n\ncli.withStdin = function (encoding, callback) {\n  if (typeof encoding === 'function') {\n    callback = encoding;\n    encoding = 'utf8';\n  }\n\n  var stream = process.openStdin(),\n      data = '';\n  stream.setEncoding(encoding);\n  stream.on('data', function (chunk) {\n    data += chunk;\n  });\n  stream.on('end', function () {\n    callback.apply(cli, [data]);\n  });\n};\n/**\n * Gets all data from STDIN, splits the data into lines and sends it\n * to callback (callback isn't called until all of STDIN is read. To\n * process each line as it's received, see the method below\n *\n * @param {Function} callback\n * @api public\n */\n\n\ncli.withStdinLines = function (callback) {\n  cli.withStdin(function (data) {\n    var sep = data.indexOf('\\r\\n') !== -1 ? '\\r\\n' : '\\n';\n    callback.apply(cli, [data.split(sep), sep]);\n  });\n};\n/**\n * Asynchronously reads a file line by line. When a line is received,\n * callback is called with (line, sep) - when EOF is reached, callback\n * receives (null, null, true)\n *\n * @param {String} file (optional - default is 'stdin')\n * @param {String} encoding (optional - default is 'utf8')\n * @param {Function} callback (line, sep, eof)\n * @api public\n */\n\n\ncli.withInput = function (file, encoding, callback) {\n  if (typeof encoding === 'function') {\n    callback = encoding;\n    encoding = 'utf8';\n  } else if (typeof file === 'function') {\n    callback = file;\n    encoding = 'utf8';\n    file = 'stdin';\n  }\n\n  if (file === 'stdin') {\n    file = process.openStdin();\n  } else {\n    try {\n      file = cli.native.fs.createReadStream(file);\n      file.on('error', cli.fatal);\n    } catch (e) {\n      return cli.fatal(e);\n    }\n  }\n\n  file.setEncoding(encoding);\n  var lines = [],\n      data = '',\n      eof,\n      sep;\n  file.on('data', function (chunk) {\n    if (eof) return;\n    data += chunk;\n\n    if (!sep) {\n      if (data.indexOf('\\r\\n') !== -1) {\n        sep = '\\r\\n';\n      } else if (data.indexOf('\\n') !== -1) {\n        sep = '\\n';\n      } else {\n        last_line = data;\n        return;\n      }\n    }\n\n    lines = data.split(sep);\n    data = eof ? null : lines.pop();\n\n    while (lines.length) {\n      callback.apply(cli, [lines.shift(), sep, false]);\n    }\n  });\n  file.on('end', function () {\n    eof = true;\n\n    if (data.length) {\n      callback.apply(cli, [data, sep || '', false]);\n    }\n\n    callback.apply(cli, [null, null, true]);\n  });\n};\n/**\n * This function does a much better job at determining the object type than the typeof operator\n * @author Angus Croll  - https://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/\n * @param  {Object} obj A Javascript object you wish to know the type of.\n * @return {string}     A string describing the Object's type if it is indeed a built in JavaScript type.\n */\n\n\ncli.toType = function (obj) {\n  var type = {}.toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n\n  function isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n  }\n\n  function isFloat(n) {\n    return n === Number(n) && n % 1 !== 0;\n  }\n\n  if (type === 'number') {\n    if (isInt(obj)) {\n      return 'integer';\n    } else if (isFloat(obj)) {\n      return 'float';\n    }\n  }\n\n  return type;\n};\n/**\n * The main entry method. `callback` receives (args, options)\n *\n * @param {Function} callback\n * @api public\n */\n\n\ncli.main = function (callback) {\n  callback.call(cli, cli.args, cli.options);\n};\n/**\n * Bind creationix's stack (https://github.com/creationix/stack).\n *\n * Create a simple middleware stack by calling:\n *\n *     cli.createServer(middleware).listen(port);\n *\n * @return {Server} server\n * @api public\n */\n\n\ncli.createServer = function\n  /*layers*/\n() {\n  var defaultStackErrorHandler = function (req, res, err) {\n    if (err) {\n      console.error(err.stack);\n      res.writeHead(500, {\n        \"Content-Type\": \"text/plain\"\n      });\n      return res.end(err.stack + \"\\n\");\n    }\n\n    res.writeHead(404, {\n      \"Content-Type\": \"text/plain\"\n    });\n    res.end(\"Not Found\\n\");\n  };\n\n  var handle, error;\n  handle = error = defaultStackErrorHandler;\n  var layers = Array.prototype.slice.call(arguments); //Allow createServer(a,b,c) and createServer([a,b,c])\n\n  if (layers.length && layers[0] instanceof Array) {\n    layers = layers[0];\n  }\n\n  layers.reverse().forEach(function (layer) {\n    var child = handle;\n\n    handle = function (req, res) {\n      try {\n        layer(req, res, function (err) {\n          if (err) return error(req, res, err);\n          child(req, res);\n        });\n      } catch (err) {\n        error(req, res, err);\n      }\n    };\n  });\n  return cli.native.http.createServer(handle);\n};\n/**\n * A wrapper for child_process.exec().\n *\n * If the child_process exits successfully, `callback` receives an array of\n * stdout lines. The current process exits if the child process has an error\n * and `errback` isn't defined.\n *\n * @param {String} cmd\n * @param {Function} callback (optional)\n * @param {Function} errback (optional)\n * @api public\n */\n\n\ncli.exec = function (cmd, callback, errback) {\n  cli.native.child_process.exec(cmd, function (err, stdout, stderr) {\n    err = err || stderr;\n\n    if (err) {\n      if (errback) {\n        return errback(err, stdout);\n      }\n\n      return cli.fatal('exec() failed\\n' + err);\n    }\n\n    if (callback) {\n      callback(stdout.split('\\n'));\n    }\n  });\n};\n/**\n * Helper method for outputting a progress bar to the console.\n *\n * @param {Number} progress (0 <= progress <= 1)\n * @api public\n */\n\n\nvar last_progress_call,\n    progress_len = 74,\n    min_progress_increase = 5,\n    last_progress_percentage = 0;\n\ncli.progress = function (progress, decimals, stream) {\n  stream = stream || process.stdout;\n  if (progress < 0 || progress > 1 || isNaN(progress)) return;\n  if (!decimals) decimals = 0;\n  var now = new Date().getTime();\n\n  if (last_progress_call && now - last_progress_call < 100 && progress !== 1) {\n    return; //Throttle progress calls\n  }\n\n  last_progress_call = now;\n  var pwr = Math.pow(10, decimals);\n  var percentage_as_num = Math.floor(progress * 100 * pwr) / pwr;\n\n  if (!stream.isTTY && percentage_as_num < 100 && percentage_as_num - last_progress_percentage < min_progress_increase) {\n    return; //don't over-print if not TTY\n  }\n\n  last_progress_percentage = percentage_as_num;\n  var percentage = percentage_as_num + '%';\n\n  for (var i = 0; i < decimals; i++) {\n    percentage += ' ';\n  }\n\n  if (!stream.isTTY) {\n    if (percentage_as_num < 100) {\n      stream.write(percentage + '...');\n    } else {\n      stream.write(percentage + '\\n');\n      last_progress_percentage = 0;\n    }\n\n    return;\n  }\n\n  var bar_length = Math.floor(progress_len * progress),\n      str = '';\n\n  if (bar_length == 0 && progress > 0) {\n    bar_length = 1;\n  }\n\n  for (i = 1; i <= progress_len; i++) {\n    str += i <= bar_length ? '#' : ' ';\n  }\n\n  stream.clearLine();\n  stream.write('[' + str + '] ' + percentage);\n\n  if (progress === 1) {\n    stream.write('\\n');\n  } else {\n    stream.cursorTo(0);\n  }\n};\n/**\n * Helper method for outputting a spinner to the console.\n *\n * @param {String|Boolean} prefix (optional)\n * @api public\n */\n\n\nvar spinner_interval;\n\ncli.spinner = function (prefix, end, stream) {\n  stream = stream || process.stdout;\n\n  if (!stream.isTTY) {\n    stream.write(prefix + '\\n');\n    return;\n  }\n\n  if (end) {\n    stream.clearLine();\n    stream.cursorTo(0);\n    stream.write(prefix + '\\n');\n    return clearInterval(spinner_interval);\n  }\n\n  prefix = prefix + ' ' || '';\n  var spinner = ['-', '\\\\', '|', '/'],\n      i = 0,\n      l = spinner.length;\n  spinner_interval = setInterval(function () {\n    stream.clearLine();\n    stream.cursorTo(0);\n    stream.write(prefix + spinner[i++]);\n    if (i == l) i = 0;\n  }, 200);\n};","map":{"version":3,"names":["cli","exports","argv","curr_opt","curr_val","full_opt","is_long","short_tags","opt_list","parsed","usage","argv_parsed","command_list","commands","show_debug","app","version","argc","options","args","command","width","option_width","native","define_native","module","Object","defineProperty","enumerable","configurable","get","require","natives","process","binding","output","console","log","exit","no_color","env","NODE_DISABLE_COLORS","TERM","enable","help","status","timeout","catchall","glob","Array","prototype","slice","call","arguments","forEach","plugin","on","err","error","msg","fatal","disable","setArgv","arr","keep_arg0","split","shift","indexOf","path","basename","execPath","length","next","push","substr","eq","len","match","parseInt","parse","opts","command_def","default_val","i","o","seen","catch_all","isArray","keys","opt","l","getArrayValue","toLowerCase","getValue","getInt","getDate","getFloat","getPath","getEmail","getUrl","getIp","getUsage","parsePackageJson","secs","setTimeout","join","autocompleteCommand","list","j","c","tmp_list","sort","type","pre","setApp","name","parse_packagejson","packagejson","JSON","fs","readFileSync","try_all","func","e","__dirname","setUsage","u","pad","str","code","short","desc","optional","line","seen_opts","switch_pad","trunc_desc","pref","pref_len","desc_len","truncated","desc_words","chars","word","long","trim","toUpperCase","replace","getOptError","expects","validate_func","err_msg","value","unshift","toType","Date","getTime","toString","parseFloat","identifier","withStdin","encoding","callback","stream","openStdin","data","setEncoding","chunk","apply","withStdinLines","sep","withInput","file","createReadStream","lines","eof","last_line","pop","obj","isInt","n","Number","isFloat","main","createServer","defaultStackErrorHandler","req","res","stack","writeHead","end","handle","layers","reverse","layer","child","http","exec","cmd","errback","child_process","stdout","stderr","last_progress_call","progress_len","min_progress_increase","last_progress_percentage","progress","decimals","isNaN","now","pwr","Math","pow","percentage_as_num","floor","isTTY","percentage","write","bar_length","clearLine","cursorTo","spinner_interval","spinner","prefix","clearInterval","setInterval"],"sources":["C:/Users/16145/node_modules/cli/cli.js"],"sourcesContent":["/**\n * Copyright (c) 2010 Chris O'Hara <cohara87@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n //Note: cli includes kof/node-natives and creationix/stack. I couldn't find\n //license information for either - contact me if you want your license added\n\nvar cli = exports,\n    argv, curr_opt, curr_val, full_opt, is_long,\n    short_tags = [], opt_list, parsed = {},\n    usage, argv_parsed, command_list, commands,\n    show_debug;\n\ncli.app = null;\ncli.version = null;\ncli.argv = [];\ncli.argc = 0;\n\ncli.options = {};\ncli.args = [];\ncli.command = null;\n\ncli.width = 70;\ncli.option_width = 25;\n\n/**\n * Bind kof's node-natives (https://github.com/kof/node-natives) to `cli.native`\n *\n * Rather than requiring node natives (e.g. var fs = require('fs')), all\n * native modules can be accessed like `cli.native.fs`\n */\ncli.native = {};\nvar define_native = function (module) {\n    Object.defineProperty(cli.native, module, {\n        enumerable: true,\n        configurable: true,\n        get: function() {\n            delete cli.native[module];\n            return (cli.native[module] = require(module));\n        }\n    });\n};\nvar natives = process.binding('natives');\nfor (var module in natives) {\n    define_native(module);\n}\n\ncli.output = console.log;\ncli.exit = require('exit');\n\ncli.no_color = false;\nif (process.env.NODE_DISABLE_COLORS || process.env.TERM === 'dumb') {\n    cli.no_color = true;\n}\n\n/**\n * Define plugins. Plugins can be enabled and disabled by calling:\n *\n *     `cli.enable(plugin1, [plugin2, ...])`\n *     `cli.disable(plugin1, [plugin2, ...])`\n *\n * Methods are chainable - `cli.enable(plugin).disable(plugin2)`.\n *\n * The 'help' plugin is enabled by default.\n */\nvar enable = {\n    help: true,      //Adds -h, --help\n    version: false,  //Adds -v,--version => gets version by parsing a nearby package.json\n    status: false,   //Adds -k,--no-color & --debug => display plain status messages /display debug messages\n    timeout: false,  //Adds -t,--timeout N => timeout the process after N seconds\n    catchall: false, //Adds -c,--catch => catch and output uncaughtExceptions\n    glob: false      //Adds glob matching => use cli.glob(arg)\n}\ncli.enable = function (/*plugins*/) {\n    Array.prototype.slice.call(arguments).forEach(function (plugin) {\n        switch (plugin) {\n        case 'catchall':\n            process.on('uncaughtException', function (err) {\n                cli.error('Uncaught exception: ' + (err.msg || err));\n            });\n            break;\n        case 'help': case 'version': case 'status':\n        case 'autocomplete': case 'timeout':\n            //Just add switches.\n            break;\n        case 'glob':\n            cli.glob = require('glob');\n            break;\n        default:\n            cli.fatal('Unknown plugin \"' + plugin + '\"');\n            break;\n        }\n        enable[plugin] = true;\n    });\n    return cli;\n}\ncli.disable = function (/*plugins*/) {\n    Array.prototype.slice.call(arguments).forEach(function (plugin) {\n        if (enable[plugin]) {\n            enable[plugin] = false;\n        }\n    });\n    return cli;\n}\n\n/**\n * Sets argv (default is process.argv).\n *\n * @param {Array|String} argv\n * @param {Boolean} keep_arg0 (optional - default is false)\n * @api public\n */\ncli.setArgv = function (arr, keep_arg0) {\n    if (typeof arr == 'string') {\n      arr = arr.split(' ');\n    } else {\n      arr = arr.slice();\n    }\n    cli.app = arr.shift();\n    // Strip off argv[0] if it's a node binary\n    // So this is still broken and will break if you are calling node through a\n    // symlink, unless you are lucky enough to have it as 'node' literal. Latter\n    // is a hack, but resolving abspaths/symlinks is an unportable can of worms.\n    if (!keep_arg0 && (['node', 'node.exe'].indexOf(cli.native.path.basename(cli.app)) !== -1\n            || cli.native.path.basename(process.execPath) === cli.app\n            || process.execPath === cli.app)) {\n        cli.app = arr.shift();\n    }\n    cli.app = cli.native.path.basename(cli.app);\n    argv_parsed = false;\n    cli.args = cli.argv = argv = arr;\n    cli.argc = argv.length;\n    cli.options = {};\n    cli.command = null;\n};\ncli.setArgv(process.argv);\n\n/**\n * Returns the next opt, or false if no opts are found.\n *\n * @return {String} opt\n * @api public\n */\ncli.next = function () {\n    if (!argv_parsed) {\n        cli.args = [];\n        argv_parsed = true;\n    }\n\n    curr_val = null;\n\n    //If we're currently in a group of short opts (e.g. -abc), return the next opt\n    if (short_tags.length) {\n        curr_opt = short_tags.shift();\n        full_opt = '-' + curr_opt;\n        return curr_opt;\n    }\n\n    if (!argv.length) {\n        return false;\n    }\n\n    curr_opt = argv.shift();\n\n    //If an escape sequence is found (- or --), subsequent opts are ignored\n    if (curr_opt === '-' || curr_opt === '--') {\n        while (argv.length) {\n            cli.args.push(argv.shift());\n        }\n        return false;\n    }\n\n    //If the next element in argv isn't an opt, add it to the list of args\n    if (curr_opt[0] !== '-') {\n        cli.args.push(curr_opt);\n        return cli.next();\n    } else {\n        //Check if the opt is short/long\n        is_long = curr_opt[1] === '-';\n        curr_opt = curr_opt.substr(is_long ? 2 : 1);\n    }\n\n    //Accept grouped short opts, e.g. -abc => -a -b -c\n    if (!is_long && curr_opt.length > 1) {\n        short_tags = curr_opt.split('');\n        return cli.next();\n    }\n\n    var eq, len;\n\n    //Check if the long opt is in the form --option=VALUE\n    if (is_long && (eq = curr_opt.indexOf('=')) >= 0) {\n        curr_val = curr_opt.substr(eq + 1);\n        curr_opt = curr_opt.substr(0, eq);\n        len = curr_val.length;\n        //Allow values to be quoted\n        if ((curr_val[0] === '\"' && curr_val[len - 1] === '\"') ||\n            (curr_val[0] === \"'\" && curr_val[len - 1] === \"'\"))\n        {\n            curr_val = curr_val.substr(1, len-2);\n        }\n        if (curr_val.match(/^[0-9]+$/)) {\n            curr_val = parseInt(curr_val, 10);\n        }\n    }\n\n    //Save the opt representation for later\n    full_opt = (is_long ? '--' : '-') + curr_opt;\n\n    return curr_opt;\n};\n\n/**\n * Parses command line opts.\n *\n * `opts` must be an object with opts defined like:\n *        long_tag: [short_tag, description, value_type, default_value];\n *\n * `commands` is an optional array or object for apps that are of the form\n *      my_app [OPTIONS] <command> [ARGS]\n *  The command list is output with usage information + there is bundled\n *  support for auto-completion, etc.\n *\n * See README.md for more information.\n *\n * @param {Object} opts\n * @param {Object} commands (optional)\n * @return {Object} opts (parsed)\n * @api public\n */\ncli.parse = function (opts, command_def) {\n    var default_val, i, o, parsed = cli.options, seen,\n        catch_all = !opts;\n    opt_list = opts || {};\n    commands = command_def;\n    command_list = commands || [];\n    if (commands && !Array.isArray(commands)) {\n        command_list = Object.keys(commands);\n    }\n    while ((o = cli.next())) {\n        seen = false;\n        for (var opt in opt_list) {\n            if (!(opt_list[opt] instanceof Array)) {\n                continue;\n            }\n            if (!opt_list[opt][0]) {\n                opt_list[opt][0] = opt;\n            }\n            if (o === opt || o === opt_list[opt][0]) {\n                seen = true;\n                if (opt_list[opt].length === 2) {\n                    parsed[opt] = true;\n                    break;\n                }\n                default_val = null;\n                if (opt_list[opt].length === 4) {\n                    default_val = opt_list[opt][3];\n                }\n                if (opt_list[opt][2] instanceof Array) {\n                    for (i = 0, l = opt_list[opt][2].length; i < l; i++) {\n                        if (typeof opt_list[opt][2][i] === 'number') {\n                            opt_list[opt][2][i] += '';\n                        }\n                    }\n                    parsed[opt] = cli.getArrayValue(opt_list[opt][2], is_long ? null : default_val);\n                    break;\n                }\n                if (opt_list[opt][2].toLowerCase) {\n                    opt_list[opt][2] = opt_list[opt][2].toLowerCase();\n                }\n                switch (opt_list[opt][2]) {\n                case 'string': case 1: case true:\n                    parsed[opt] = cli.getValue(default_val);\n                    break;\n                case 'int': case 'number': case 'num':\n                case 'time': case 'seconds': case 'secs': case 'minutes': case 'mins':\n                case 'x': case 'n':\n                    parsed[opt] = cli.getInt(default_val);\n                    break;\n                case 'date': case 'datetime': case 'date_time':\n                    parsed[opt] = cli.getDate(default_val);\n                    break;\n                case 'float': case 'decimal':\n                    parsed[opt] = cli.getFloat(default_val);\n                    break;\n                case 'path': case 'file': case 'directory': case 'dir':\n                    parsed[opt] = cli.getPath(default_val, opt_list[opt][2]);\n                    break;\n                case 'email':\n                    parsed[opt] = cli.getEmail(default_val);\n                    break;\n                case 'url': case 'uri': case 'domain': case 'host':\n                    parsed[opt] = cli.getUrl(default_val, opt_list[opt][2]);\n                    break;\n                case 'ip':\n                    parsed[opt] = cli.getIp(default_val);\n                    break;\n                case 'bool': case 'boolean': case 'on':\n                    parsed[opt] = true;\n                    break;\n                case 'false': case 'off': case false: case 0:\n                    parsed[opt] = false;\n                    break;\n                default:\n                     cli.fatal('Unknown opt type \"' + opt_list[opt][2] + '\"');\n                }\n                break;\n            }\n        }\n        if (!seen) {\n            if (enable.help && (o === 'h' || o === 'help')) {\n                cli.getUsage();\n            } else if (enable.version && (o === 'v' || o === 'version')) {\n                if (cli.version == null) {\n                    cli.parsePackageJson();\n                }\n                console.error(cli.app + ' v' + cli.version);\n                cli.exit();\n                break;\n            } else if (enable.catchall && (o === 'c' || o === 'catch')) {\n                continue;\n            } else if (enable.status && (o === 'k' || o === 'no-color')) {\n                cli.no_color = (o === 'k' || o === 'no-color');\n                continue;\n            } else if (enable.status && (o === 'debug')) {\n                show_debug = o === 'debug';\n                continue;\n            } else if (enable.timeout && (o === 't' || o === 'timeout')) {\n                var secs = cli.getInt();\n                setTimeout(function () {\n                    cli.fatal('Process timed out after ' + secs + 's');\n                }, secs * 1000);\n                continue;\n            } else if (catch_all) {\n                parsed[o] = curr_val || true;\n                continue;\n            }\n            cli.fatal('Unknown option ' + full_opt);\n        }\n    }\n    //Fill the remaining options with their default value or null\n    for (var opt in opt_list) {\n        default_val = opt_list[opt].length === 4 ? opt_list[opt][3] : null;\n        if (!(opt_list[opt] instanceof Array)) {\n            parsed[opt] = opt_list[opt];\n            continue;\n        } else if (typeof parsed[opt] === 'undefined') {\n            parsed[opt] = default_val;\n        }\n    }\n    if (command_list.length) {\n        if (cli.args.length === 0) {\n            if (enable.help) {\n                cli.getUsage();\n            } else {\n                cli.fatal('A command is required (' + command_list.join(', ') + ').');\n            }\n            return cli.exit(1);\n        } else {\n            cli.command = cli.autocompleteCommand(cli.args.shift());\n        }\n    }\n    cli.argc = cli.args.length;\n    return parsed;\n};\n\n/**\n * Helper method for matching a command from the command list.\n *\n * @param {String} command\n * @return {String} full_command\n * @api public\n */\ncli.autocompleteCommand = function (command) {\n    var list;\n    if (!(command_list instanceof Array)) {\n        list = Object.keys(command_list);\n    } else {\n        list = command_list;\n    }\n    var i, j = 0, c = command.length, tmp_list;\n    if (list.length === 0 || list.indexOf(command) !== -1) {\n        return command;\n    }\n    for (i = 0; i < c; i++) {\n        tmp_list = [];\n        l = list.length;\n        if (l <= 1) break;\n        for (j = 0; j < l; j++)\n            if (list[j].length >= i && list[j][i] === command[i])\n                tmp_list.push(list[j]);\n        list = tmp_list;\n    }\n    l = list.length;\n    if (l === 1) {\n        return list[0];\n    } else if (l === 0) {\n        cli.fatal('Unknown command \"' + command + '\"' + (enable.help ? '. Please see --help for more information' : ''));\n    } else {\n        list.sort();\n        cli.fatal('The command \"' + command + '\" is ambiguous and could mean \"' + list.join('\", \"') + '\"');\n    }\n};\n\n/**\n * Adds methods to output styled status messages to stderr.\n *\n * Added methods are cli.info(msg), cli.error(msg), cli.ok(msg), and\n * cli.debug(msg).\n *\n * To control status messages, use the 'status' plugin\n *    1) debug() messages are hidden by default. Display them with\n *       the --debug opt.\n *    2) to hide all status messages, use the -s or --silent opt.\n *\n * @api private\n */\ncli.status = function (msg, type) {\n    var pre;\n    switch (type) {\n    case 'info':\n        pre = cli.no_color ? 'INFO:' : '\\x1B[33mINFO\\x1B[0m:';\n        break;\n    case 'debug':\n        pre = cli.no_color ? 'DEBUG:' : '\\x1B[36mDEBUG\\x1B[0m:';\n        break;\n    case 'error':\n    case 'fatal':\n        pre = cli.no_color ? 'ERROR:' : '\\x1B[31mERROR\\x1B[0m:';\n        break;\n    case 'ok':\n        pre = cli.no_color ? 'OK:' : '\\x1B[32mOK\\x1B[0m:';\n        break;\n    }\n    msg = pre + ' ' + msg;\n    if (type === 'fatal') {\n        console.error(msg);\n        return cli.exit(1);\n    }\n    if (enable.status && !show_debug && type === 'debug') {\n        return;\n    }\n    console.error(msg);\n};\n['info','error','ok','debug','fatal'].forEach(function (type) {\n    cli[type] = function (msg) {\n        cli.status(msg, type);\n    };\n});\n\n/**\n * Sets the app name and version.\n *\n * Usage:\n *     setApp('myapp', '0.1.0');\n *     setApp('./package.json'); //Pull name/version from package.json\n *\n * @param {String} name\n * @return cli (for chaining)\n * @api public\n */\ncli.setApp = function (name, version) {\n    if (name.indexOf('package.json') !== -1) {\n        cli.parsePackageJson(name);\n    } else {\n        cli.app = name;\n        cli.version = version;\n    }\n    return cli;\n};\n\n/**\n * Parses the version number from package.json. If no path is specified, cli\n * will attempt to locate a package.json in ./, ../ or ../../\n *\n * @param {String} path (optional)\n * @api public\n */\ncli.parsePackageJson = function (path) {\n    var parse_packagejson = function (path) {\n        var packagejson = JSON.parse(cli.native.fs.readFileSync(path, 'utf8'));\n        cli.version = packagejson.version;\n        cli.app = packagejson.name;\n    };\n    var try_all = function (arr, func, err) {\n        for (var i = 0, l = arr.length; i < l; i++) {\n            try {\n                func(arr[i]);\n                return;\n            } catch (e) {\n                if (i === l-1) {\n                    cli.fatal(err);\n                }\n            }\n        }\n    };\n    try {\n        if (path) {\n            return parse_packagejson(path);\n        }\n        try_all([\n            __dirname + '/package.json',\n            __dirname + '/../package.json',\n            __dirname + '/../../package.json'\n        ], parse_packagejson);\n    } catch (e) {\n        cli.fatal('Could not detect ' + cli.app + ' version');\n    }\n};\n\n/**\n * Sets the usage string - default is `app [OPTIONS] [ARGS]`.\n *\n * @param {String} u\n * @return cli (for chaining)\n * @api public\n */\ncli.setUsage = function (u) {\n    usage = u;\n    return cli;\n};\n\nvar pad = function (str, len) {\n    if (typeof len === 'undefined') {\n        len = str;\n        str = '';\n    }\n    if (str.length < len) {\n        len -= str.length;\n        while (len--) str += ' ';\n    }\n    return str;\n};\n\n/**\n * Automatically build usage information from the opts list. If the help\n * plugin is enabled (default), this info is displayed with -h, --help.\n *\n * @api public\n */\ncli.getUsage = function (code) {\n    var short, desc, optional, line, seen_opts = [],\n        switch_pad = cli.option_width;\n\n    var trunc_desc = function (pref, desc, len) {\n        var pref_len = pref.length,\n            desc_len = cli.width - pref_len,\n            truncated = '';\n        if (desc.length <= desc_len) {\n            return desc;\n        }\n        var desc_words = (desc+'').split(' '), chars = 0, word;\n        while (desc_words.length) {\n            truncated += (word = desc_words.shift()) + ' ';\n            chars += word.length;\n            if (desc_words.length && chars + desc_words[0].length > desc_len) {\n                truncated += '\\n' + pad(pref_len);\n                chars = 0;\n            }\n        }\n        return truncated;\n    };\n\n    usage = usage || cli.app + ' [OPTIONS]' + (command_list.length ? ' <command>' : '') + ' [ARGS]';\n    if (cli.no_color) {\n        console.error('Usage:\\n  ' + usage);\n        console.error('Options: ');\n    } else {\n        console.error('\\x1b[1mUsage\\x1b[0m:\\n  ' + usage);\n        console.error('\\n\\x1b[1mOptions\\x1b[0m: ');\n    }\n    for (var opt in opt_list) {\n\n        if (opt.length === 1) {\n            long = opt_list[opt][0];\n            short = opt;\n        } else {\n            long = opt;\n            short = opt_list[opt][0];\n        }\n\n        //Parse opt_list\n        desc = opt_list[opt][1].trim();\n        type = opt_list[opt].length >= 3 ? opt_list[opt][2] : null;\n        optional = opt_list[opt].length === 4 ? opt_list[opt][3] : null;\n\n        //Build usage line\n        if (short === long) {\n            if (short.length === 1) {\n                line = '  -' + short;\n            } else {\n                line = '      --' + long;\n            }\n        } else if (short) {\n            line = '  -' + short + ', --' + long;\n        } else {\n            line = '      --' + long;\n        }\n        line += ' ';\n\n        if (type) {\n            if (type instanceof Array) {\n                desc += '. VALUE must be either [' + type.join('|') + ']';\n                type = 'VALUE';\n            }\n            if (type === true || type === 1) {\n                type = long.toUpperCase();\n            }\n            type = type.toUpperCase();\n            if (type === 'FLOAT' || type === 'INT') {\n                type = 'NUMBER';\n            }\n            line += optional ? '[' + type + ']' : type;\n        }\n        line = pad(line, switch_pad);\n        line += trunc_desc(line, desc);\n        line += optional ? ' (Default is ' + optional + ')' : '';\n        console.error(line.replace('%s', '%\\0s'));\n\n        seen_opts.push(short);\n        seen_opts.push(long);\n    }\n    if (enable.timeout && seen_opts.indexOf('t') === -1 && seen_opts.indexOf('timeout') === -1) {\n        console.error(pad('  -t, --timeout N', switch_pad) + 'Exit if the process takes longer than N seconds');\n    }\n    if (enable.status) {\n        if (seen_opts.indexOf('k') === -1 && seen_opts.indexOf('no-color') === -1) {\n            console.error(pad('  -k, --no-color', switch_pad) + 'Omit color from output');\n        }\n        if (seen_opts.indexOf('debug') === -1) {\n            console.error(pad('      --debug', switch_pad) + 'Show debug information');\n        }\n    }\n    if (enable.catchall && seen_opts.indexOf('c') === -1 && seen_opts.indexOf('catch') === -1) {\n        console.error(pad('  -c, --catch', switch_pad) + 'Catch unanticipated errors');\n    }\n    if (enable.version && seen_opts.indexOf('v') === -1 && seen_opts.indexOf('version') === -1) {\n        console.error(pad('  -v, --version', switch_pad) + 'Display the current version');\n    }\n    if (enable.help && seen_opts.indexOf('h') === -1 && seen_opts.indexOf('help') === -1) {\n        console.error(pad('  -h, --help', switch_pad) + 'Display help and usage details');\n    }\n    if (command_list.length) {\n        console.error('\\n\\x1b[1mCommands\\x1b[0m: ');\n        if (!Array.isArray(commands)) {\n            for (var c in commands) {\n                line = '  ' + pad(c, switch_pad - 2);\n                line += trunc_desc(line, commands[c]);\n                console.error(line);\n            }\n        } else {\n            command_list.sort();\n            console.error('  ' + trunc_desc('  ', command_list.join(', ')));\n        }\n    }\n    return cli.exit(code);\n};\n\n/**\n * Generates an error message when an opt is incorrectly used.\n *\n * @param {String} expects (e.g. 'a value')\n * @param {String} type (e.g. 'VALUE')\n * @api public\n */\ncli.getOptError = function (expects, type) {\n    var err = full_opt + ' expects ' + expects\n            + '. Use `' + cli.app + ' ' + full_opt + (is_long ? '=' : ' ') + type + '`';\n    return err;\n};\n\n/**\n * Gets the next opt value and validates it with an optional validation\n * function. If validation fails or no value can be obtained, this method\n * will return the default value (if specified) or exit with err_msg.\n *\n * @param {String} default_val\n * @param {Function} validate_func\n * @param {String} err_msg\n * @api public\n */\ncli.getValue = function (default_val, validate_func, err_msg) {\n    err_msg = err_msg || cli.getOptError('a value', 'VALUE');\n\n    var value;\n\n    try {\n        if (curr_val) {\n            if (validate_func) {\n                curr_val = validate_func(curr_val);\n            }\n            return curr_val;\n        }\n\n        //Grouped short opts aren't allowed to have values\n        if (short_tags.length) {\n            throw 'Short tags';\n        }\n\n        //If there's no args left or the next arg is an opt, return the\n        //default value (if specified) - otherwise fail\n        if (!argv.length || (argv[0].length === 1 && argv[0][0] === '-')) {\n            throw 'No value';\n        }\n\n        value = argv.shift();\n\n        if (value.match(/^[0-9]+$/)) {\n            value = parseInt(value, 10);\n        }\n\n        //Run the value through a validation/transformation function if specified\n        if (validate_func) {\n            value = validate_func(value);\n        }\n    } catch (e) {\n\n        //The value didn't pass the validation/transformation. Unshift the value and\n        //return the default value (if specified)\n        if (value) {\n            argv.unshift(value);\n        }\n        return default_val != null ? default_val : cli.fatal(err_msg);\n    }\n    return value;\n};\n\ncli.getInt = function (default_val) {\n    return cli.getValue(default_val, function (value) {\n        if (typeof value === 'number') return value;\n        if (!value.match(/^(?:-?(?:0|[1-9][0-9]*))$/)) {\n            throw 'Invalid int';\n        }\n        return parseInt(value);\n    }, cli.getOptError('a number', 'NUMBER'));\n}\n\ncli.getDate = function (default_val) {\n\n    return cli.getValue(default_val, function (value) {\n        if (cli.toType(value) === 'date') return value;\n        value = new Date(value);\n        if ( ! value.getTime() ) {\n            throw value.toString();\n        }\n\n        return value;\n    }, cli.getOptError('a date', 'DATE'));\n}\n\ncli.getFloat = function (default_val) {\n    return cli.getValue(default_val, function (value) {\n        if (!value.match(/^(?:-?(?:0|[1-9][0-9]*))?(?:\\.[0-9]*)?$/)) {\n            throw 'Invalid float';\n        }\n        return parseFloat(value, 10);\n    }, cli.getOptError('a number', 'NUMBER'));\n}\n\ncli.getUrl = function (default_val, identifier) {\n    identifier = identifier || 'url';\n    return cli.getValue(default_val, function (value) {\n        if (!value.match(/^(?:(?:ht|f)tp(?:s?)\\:\\/\\/|~\\/|\\/)?(?:\\w+:\\w+@)?((?:(?:[-\\w\\d{1-3}]+\\.)+(?:com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|edu|co\\.uk|ac\\.uk|it|fr|tv|museum|asia|local|travel|[a-z]{2})?)|((\\b25[0-5]\\b|\\b[2][0-4][0-9]\\b|\\b[0-1]?[0-9]?[0-9]\\b)(\\.(\\b25[0-5]\\b|\\b[2][0-4][0-9]\\b|\\b[0-1]?[0-9]?[0-9]\\b)){3}))(?::[\\d]{1,5})?(?:(?:(?:\\/(?:[-\\w~!$+|.,=]|%[a-f\\d]{2})+)+|\\/)+|\\?|#)?(?:(?:\\?(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)(?:&(?:[-\\w~!$+|.,*:]|%[a-f\\d{2}])+=?(?:[-\\w~!$+|.,*:=]|%[a-f\\d]{2})*)*)*(?:#(?:[-\\w~!$ |\\/.,*:;=]|%[a-f\\d]{2})*)?$/i)) {\n            throw 'Invalid URL';\n        }\n        return value;\n    }, cli.getOptError('a ' + identifier, identifier.toUpperCase()));\n}\n\ncli.getEmail = function (default_val) {\n    return cli.getValue(default_val, function (value) {\n        if (!value.match(/^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/)) {\n            throw 'Invalid email';\n        }\n        return value;\n    }, cli.getOptError('an email', 'EMAIL'));\n}\n\ncli.getIp = function (default_val) {\n    return cli.getValue(default_val, function (value) {\n        if (!value.match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/)) {\n            throw 'Invalid IP';\n        }\n        return value;\n    }, cli.getOptError('an IP', 'IP'));\n}\n\ncli.getPath = function (default_val, identifier) {\n    identifier = identifier || 'path';\n    return cli.getValue(default_val, function (value) {\n        if (value.match(/[?*;{}]/)) {\n            throw 'Invalid path';\n        }\n        return value;\n    }, cli.getOptError('a ' + identifier, identifier.toUpperCase()));\n}\n\ncli.getArrayValue = function (arr, default_val) {\n    return cli.getValue(default_val, function (value) {\n        if (arr.indexOf(value) === -1) {\n            throw 'Unexpected value';\n        }\n        return value;\n    }, cli.getOptError('either [' + arr.join('|') + ']', 'VALUE'));\n}\n\n/**\n * Gets all data from STDIN (with optional encoding) and sends it to callback.\n *\n * @param {String} encoding (optional - default is 'utf8')\n * @param {Function} callback\n * @api public\n */\ncli.withStdin = function (encoding, callback) {\n    if (typeof encoding === 'function') {\n        callback = encoding;\n        encoding = 'utf8';\n    }\n    var stream = process.openStdin(), data = '';\n    stream.setEncoding(encoding);\n    stream.on('data', function (chunk) {\n        data += chunk;\n    });\n    stream.on('end', function () {\n        callback.apply(cli, [data]);\n    });\n};\n\n/**\n * Gets all data from STDIN, splits the data into lines and sends it\n * to callback (callback isn't called until all of STDIN is read. To\n * process each line as it's received, see the method below\n *\n * @param {Function} callback\n * @api public\n */\ncli.withStdinLines = function (callback) {\n    cli.withStdin(function (data) {\n        var sep = data.indexOf('\\r\\n') !== -1 ? '\\r\\n' : '\\n';\n        callback.apply(cli, [data.split(sep), sep]);\n    });\n};\n\n/**\n * Asynchronously reads a file line by line. When a line is received,\n * callback is called with (line, sep) - when EOF is reached, callback\n * receives (null, null, true)\n *\n * @param {String} file (optional - default is 'stdin')\n * @param {String} encoding (optional - default is 'utf8')\n * @param {Function} callback (line, sep, eof)\n * @api public\n */\ncli.withInput = function (file, encoding, callback) {\n    if (typeof encoding === 'function') {\n        callback = encoding;\n        encoding = 'utf8';\n    } else if (typeof file === 'function') {\n        callback = file;\n        encoding = 'utf8';\n        file = 'stdin';\n    }\n    if (file === 'stdin') {\n        file = process.openStdin();\n    } else {\n        try {\n            file = cli.native.fs.createReadStream(file);\n            file.on('error', cli.fatal);\n        } catch (e) {\n            return cli.fatal(e);\n        }\n    }\n    file.setEncoding(encoding);\n    var lines = [], data = '', eof, sep;\n    file.on('data', function (chunk) {\n        if (eof) return;\n        data += chunk;\n        if (!sep) {\n            if (data.indexOf('\\r\\n') !== -1) {\n                sep = '\\r\\n';\n            } else if (data.indexOf('\\n') !== -1) {\n                sep = '\\n';\n            } else {\n                last_line = data;\n                return;\n            }\n        }\n        lines = data.split(sep);\n        data = eof ? null : lines.pop();\n        while (lines.length) {\n            callback.apply(cli, [lines.shift(), sep, false]);\n        }\n    });\n    file.on('end', function () {\n        eof = true;\n        if (data.length) {\n            callback.apply(cli, [data, sep || '', false]);\n        }\n        callback.apply(cli, [null, null, true]);\n    });\n};\n\n/**\n * This function does a much better job at determining the object type than the typeof operator\n * @author Angus Croll  - https://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/\n * @param  {Object} obj A Javascript object you wish to know the type of.\n * @return {string}     A string describing the Object's type if it is indeed a built in JavaScript type.\n */\ncli.toType = function(obj) {\n    var type = ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n\n    function isInt(n) {\n        return Number(n) === n && n % 1 === 0;\n    }\n\n    function isFloat(n){\n        return n === Number(n) && n % 1 !== 0;\n    }\n\n    if ( type === 'number' ) {\n        if ( isInt(obj) ) {\n            return 'integer';\n        } else if ( isFloat(obj) ) {\n            return 'float';\n        }\n    }\n\n    return type;\n}\n\n/**\n * The main entry method. `callback` receives (args, options)\n *\n * @param {Function} callback\n * @api public\n */\ncli.main = function (callback) {\n    callback.call(cli, cli.args, cli.options);\n}\n\n/**\n * Bind creationix's stack (https://github.com/creationix/stack).\n *\n * Create a simple middleware stack by calling:\n *\n *     cli.createServer(middleware).listen(port);\n *\n * @return {Server} server\n * @api public\n */\ncli.createServer = function(/*layers*/) {\n    var defaultStackErrorHandler = function (req, res, err) {\n        if (err) {\n            console.error(err.stack);\n            res.writeHead(500, {\"Content-Type\": \"text/plain\"});\n            return res.end(err.stack + \"\\n\");\n        }\n        res.writeHead(404, {\"Content-Type\": \"text/plain\"});\n        res.end(\"Not Found\\n\");\n    };\n    var handle, error;\n    handle = error = defaultStackErrorHandler;\n    var layers = Array.prototype.slice.call(arguments);\n\n    //Allow createServer(a,b,c) and createServer([a,b,c])\n    if (layers.length && layers[0] instanceof Array) {\n        layers = layers[0];\n    }\n    layers.reverse().forEach(function (layer) {\n        var child = handle;\n        handle = function (req, res) {\n            try {\n                layer(req, res, function (err) {\n                    if (err) return error(req, res, err);\n                    child(req, res);\n                });\n            } catch (err) {\n                error(req, res, err);\n            }\n        };\n    });\n    return cli.native.http.createServer(handle);\n};\n\n/**\n * A wrapper for child_process.exec().\n *\n * If the child_process exits successfully, `callback` receives an array of\n * stdout lines. The current process exits if the child process has an error\n * and `errback` isn't defined.\n *\n * @param {String} cmd\n * @param {Function} callback (optional)\n * @param {Function} errback (optional)\n * @api public\n */\ncli.exec = function (cmd, callback, errback) {\n    cli.native.child_process.exec(cmd, function (err, stdout, stderr) {\n        err = err || stderr;\n        if (err) {\n            if (errback) {\n                return errback(err, stdout);\n            }\n            return cli.fatal('exec() failed\\n' + err);\n        }\n        if (callback) {\n            callback(stdout.split('\\n'));\n        }\n    });\n};\n\n/**\n * Helper method for outputting a progress bar to the console.\n *\n * @param {Number} progress (0 <= progress <= 1)\n * @api public\n */\nvar last_progress_call, progress_len = 74, min_progress_increase = 5, last_progress_percentage = 0;\ncli.progress = function (progress, decimals, stream) {\n    stream = stream || process.stdout;\n    if (progress < 0 || progress > 1 || isNaN(progress)) return;\n    if (!decimals) decimals = 0;\n    var now = (new Date()).getTime();\n    if (last_progress_call && (now - last_progress_call) < 100 && progress !== 1) {\n        return; //Throttle progress calls\n    }\n    last_progress_call = now;\n\n    var pwr = Math.pow(10, decimals);\n    var percentage_as_num = Math.floor(progress * 100 * pwr) / pwr;\n    if (!stream.isTTY && percentage_as_num < 100 && percentage_as_num - last_progress_percentage < min_progress_increase) {\n        return; //don't over-print if not TTY\n    }\n    last_progress_percentage = percentage_as_num;\n    var percentage = percentage_as_num + '%';\n    for (var i = 0; i < decimals; i++) {\n        percentage += ' ';\n    }\n    if (!stream.isTTY) {\n        if (percentage_as_num < 100) {\n            stream.write(percentage + '...');\n        }\n        else {\n            stream.write(percentage + '\\n');\n            last_progress_percentage = 0;\n        }\n        return;\n    }\n    var bar_length = Math.floor(progress_len * progress),\n        str       = '';\n    if (bar_length == 0 && progress > 0) {\n        bar_length = 1;\n    }\n    for (i = 1; i <= progress_len; i++) {\n        str += i <= bar_length ? '#' : ' ';\n    }\n    stream.clearLine();\n    stream.write('[' + str + '] ' +  percentage);\n    if (progress === 1) {\n        stream.write('\\n');\n    } else {\n        stream.cursorTo(0);\n    }\n};\n\n/**\n * Helper method for outputting a spinner to the console.\n *\n * @param {String|Boolean} prefix (optional)\n * @api public\n */\nvar spinner_interval;\ncli.spinner = function (prefix, end, stream) {\n    stream = stream || process.stdout;\n    if(!stream.isTTY) {\n        stream.write(prefix + '\\n');\n        return;\n    }\n    if (end) {\n        stream.clearLine();\n        stream.cursorTo(0);\n        stream.write(prefix + '\\n');\n        return clearInterval(spinner_interval);\n    }\n    prefix = prefix + ' ' || '';\n    var spinner = ['-','\\\\','|','/'], i = 0, l = spinner.length;\n    spinner_interval = setInterval(function () {\n        stream.clearLine();\n        stream.cursorTo(0);\n        stream.write(prefix + spinner[i++]);\n        if (i == l) i = 0;\n    }, 200);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}